const { cleanSingleContent } = require('./bulk-content-cleaner');

// Example of problematic content that would come from WordPress
const problematicContent = `
<style>
.brutalist-button { 
  left: -100%; 
  transition: none; 
  opacity: 0; 
} 
@keyframes slide { 
  0% { left: -100%; } 
  100% { left: 100%; } 
}
</style>

<div class="content-wrapper" style="margin: 10px; color: red;">
  <span style="font-family: Arial;">
    &lt;strong&gt;IELTS Reading&lt;/strong&gt; ржП &amp;nbsp; рзо+ рж╕рзНржХрзЛрж░ ржХрж░рж╛рж░ ржЬржирзНржп
  </span>
</div>

[caption id="attachment_123" align="aligncenter" width="300"]
<img src="ielts-tips.jpg" alt="IELTS Tips">
ржПржЗ ржЫржмрж┐рждрзЗ ржжрзЗржЦрзБржи IELTS ржПрж░ ржЯрж┐ржкрж╕
[/caption]

<p></p><p>&nbsp;</p>

ржкрзНрж░рждрж┐ржЯрж┐ ржкрзНржпрж╛рж╕рзЗржЬрзЗрж░ ржЬржирзНржп рж╕ржоржпрж╝ ржнрж╛ржЧ ржХрж░рзЗ ржирж┐ржиред &quot;Time Management&quot; ржЦрзБржмржЗ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржгред

<br><br><br>

&amp;nbsp; рзз. ржкрзНрж░ржержорзЗ &lt;em&gt;skimming&lt;/em&gt; ржХрж░рзБржи
&amp;nbsp; рзи. рждрж╛рж░ржкрж░ &lt;strong&gt;scanning&lt;/strong&gt; ржХрж░рзБржи  
&amp;nbsp; рзй. ржкрзНрж░рж╢рзНржиржЧрзБрж▓рзЛ ржнрж╛рж▓рзЛ ржХрж░рзЗ ржкржбрж╝рзБржи

[gallery ids="1,2,3"]

<font face="Verdana" color="blue">
  ржПржЗ ржкржжрзНржзрждрж┐ржЧрзБрж▓рзЛ ржЕржирзБрж╕рж░ржг ржХрж░рж▓рзЗ ржЖржкржирж┐ ржЕржмрж╢рзНржпржЗ ржнрж╛рж▓рзЛ рж╕рзНржХрзЛрж░ ржкрж╛ржмрзЗржиред
</font>

<script>
  console.log("This should be removed");
</script>

&lt;p&gt;рж╢рзЗрж╖ ржХржерж╛: ржирж┐ржпрж╝ржорж┐ржд ржЕржирзБрж╢рзАрж▓ржи ржХрж░рзБржиред&lt;/p&gt;
`;

async function demonstrateCleaning() {
  console.log('ЁЯзк Content Cleaning Demonstration');
  console.log('==================================\n');

  console.log('ЁЯУЭ PROBLEMATIC CONTENT (Before Cleaning):');
  console.log('----------------------------------------');
  console.log(problematicContent);
  console.log('\n' + '='.repeat(60) + '\n');

  try {
    const cleanedContent = await cleanSingleContent(problematicContent);
    
    console.log('тЬи CLEANED CONTENT (After Cleaning):');
    console.log('------------------------------------');
    console.log(cleanedContent);
    console.log('\n' + '='.repeat(60) + '\n');

    console.log('ЁЯУК CLEANING SUMMARY:');
    console.log('--------------------');
    console.log(`Original length: ${problematicContent.length} characters`);
    console.log(`Cleaned length: ${cleanedContent.length} characters`);
    console.log(`Reduction: ${((problematicContent.length - cleanedContent.length) / problematicContent.length * 100).toFixed(1)}%`);
    
    console.log('\nтЬЕ ISSUES FIXED:');
    console.log('- тЭМ Removed CSS styles and @keyframes');
    console.log('- тЭМ Removed WordPress shortcodes [caption], [gallery]');
    console.log('- тЭМ Removed JavaScript <script> tags');  
    console.log('- тЭМ Removed HTML tags with style/class attributes');
    console.log('- тЭМ Decoded HTML entities (&lt; &gt; &amp; &quot; &nbsp;)');
    console.log('- тЭМ Removed empty paragraphs and excessive line breaks');
    console.log('- тЭМ Removed <font> tags and inline styling');
    console.log('- тЬЕ Converted to clean, semantic HTML paragraphs');
    console.log('- тЬЕ Preserved Bengali text content');
    console.log('- тЬЕ Maintained readable formatting');

  } catch (error) {
    console.error('тЭМ Error during demonstration:', error.message);
  }
}

// Additional examples
const additionalExamples = [
  {
    name: "HTML Entities Example",
    content: "&lt;p&gt;IELTS &amp; PTE ржкрж░рзАржХрзНрж╖рж╛рж░ ржЬржирзНржп &quot;рж╕рзЗрж░рж╛&quot; ржЯрж┐ржкрж╕ред&lt;/p&gt; &nbsp;&nbsp; &mdash; Banglay IELTS"
  },
  {
    name: "WordPress Shortcodes Example", 
    content: "[embed]https://youtube.com/watch?v=123[/embed] ржПржЗ ржнрж┐ржбрж┐ржУржЯрж┐ ржжрзЗржЦрзБржи [wp_custom_widget id=5] IELTS рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирждрзЗред"
  },
  {
    name: "Broken HTML Example",
    content: "<div><span style='color:red;'><font face='Arial'>IELTS Speaking</font></span> ржЯрзЗрж╕рзНржЯрзЗ <p></p><br><br> ржнрж╛рж▓рзЛ ржХрж░рж╛рж░ ржЙржкрж╛ржпрж╝</div>"
  }
];

async function runAdditionalExamples() {
  console.log('\n\nЁЯФН Additional Cleaning Examples');
  console.log('===============================\n');

  for (const example of additionalExamples) {
    console.log(`ЁЯУМ ${example.name}:`);
    console.log('Before:', example.content);
    
    try {
      const cleaned = await cleanSingleContent(example.content);
      console.log('After:', cleaned);
    } catch (error) {
      console.log('Error:', error.message);
    }
    
    console.log('\n' + '-'.repeat(50) + '\n');
  }
}

// Run demonstrations
demonstrateCleaning().then(() => {
  return runAdditionalExamples();
});